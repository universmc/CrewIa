const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();


// let systemContent = "Bienvenue dans notre √©quipe, [üåå.systemDream]! Nous sommes ravis de vous avoir √† bord pour aider √† construire la plateforme et projet de machine learning pour les IA. Pour que nous puissions mieux comprendre votre exp√©rience et vos comp√©tences, pouvez-vous nous fournir votre curriculum vitae et nous parler de vos pr√©c√©dentes r√©alisations dans le domaine du d√©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous pr√©senter notre instance pour le systremDream (name du {role:system})et donc rediger les code source norm√© w3c, documentanter (readme.md [traduit en lang=Fr, fran√ßais]), surtout fonctionnel respectant la logique de gantt du web sementique";
async function main() {

  let systemContent = "Bienvenue dans notre √©quipe, [üåå.systemDream]! Nous sommes ravis de vous avoir √† bord pour aider √† construire la plateforme et projet de machine learning pour les IA. Pour que nous puissions mieux comprendre votre exp√©rience et vos comp√©tences, pouvez-vous nous fournir votre curriculum vitae et nous parler de vos pr√©c√©dentes r√©alisations dans le domaine du d√©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous pr√©senter notre instance pour le systremDream (name du {role:system})et donc rediger les code source norm√© w3c, documentanter (readme.md [traduit en lang=Fr, fran√ßais]), surtout fonctionnel respectant la logique de gantt du web sementique";
  const Context =
  {
    "titre": "Designer UX/UI pour univers-mc.cloud",
    "version":"1-0-2",
    "emoji":"üï¥Ô∏è",
    "role": {
        "t√¢che": "Concevoir et optimiser les √©l√©ments visuels et l'exp√©rience utilisateur (UX/UI) du site Web univers-mc.cloud, en s'appuyant sur des mod√®les de Machine Learning et d'IA int√©gr√©s dans le r√©f√©rentiel node_modules.",
        "comp√©tences": [
            "Ma√Ætrise des langages de programmation Web : HTML, CSS, JavaScript.",
            "Exp√©rience avec les frameworks JavaScript : React, Angular, Vue.js.",
            "Connaissance des langages de programmation pour l'IA : Python, R, Java.",
            "Familiarit√© avec les technologies multim√©dias : BASIC, ASCII, SVG, audio, vid√©o, radio.",
            "Utilisation d'outils de design : gimp, draw.io asciiMap, Figma, InVision."
        ]
    },
    "contexte": "En tant que membre de l'√©quipe univers-mc.cloud, le designer UX/UI sera responsable de la conception et de l'optimisation des √©l√©ments visuels et de l'exp√©rience utilisateur du site Web.",
    "processus": [
        "Comprendre et identifier les besoins et les exigences des utilisateurs.",
        "D√©velopper des designs UX/UI attractifs et conviviaux.",
        "Optimiser les √©l√©ments visuels √† l'aide de mod√®les de Machine Learning et d'IA.",
        "Concevoir des interfaces utilisateur intuitives et efficaces.",
        "Cr√©er des diagrammes d'architecture de l'information et des cartes de l'exp√©rience utilisateur.",
        "G√©n√©rer des mod√®les, des maquettes et des prototypes pour pr√©senter et valider les conceptions."
    ],
    "caract√©ristiques": "√âl√©ments visuels optimis√©s, interface utilisateur intuitive et efficace, mod√®les, maquettes et prototypes pr√©sent√©s et approuv√©s par les parties prenantes."
}

  const sujet = "job";
  const verbe = "designer";
  const complement = "api/json";
  const contexte = "projets";
  const PromptIa = `${sujet},${verbe},${complement},${contexte}`;
  
  
  
  const coher = "inistlisation du template de response avec insterface graphique ASCII datase `BorderChars`";
  const borderChars = { topLeft: '‚ïî', topRight: '‚ïó', bottomLeft: '‚ïö', bottomRight: '‚ïù', horizontal: '‚ïê', vertical: '‚ïë', intersectionLeft: '‚ï†', intersectionRight: '‚ï£', intersectionTop: '‚ï¶', intersectionBottom: '‚ï©', intersectionCross: '‚ï¨',
  };
  
  function drawWindow(width = 20, height = 5, content = []) {
    const horizontalBorder = '‚ïê'.repeat(width - 2);
    const emptyLine = '‚ïë' + ' '.repeat(width - 2) + '‚ïë';
    
    // Dessiner la bordure sup√©rieure
    console.log(`‚ïî${horizontalBorder}‚ïó`);
    
    // Dessiner les lignes de contenu ou des lignes vides si le contenu est insuffisant
    for (let i = 0; i < height; i++) {
      if (content[i]) {
        // S'assurer que le contenu est centr√© et n'exc√®de pas la largeur de la fen√™tre
        const lineContent = content[i].slice(0, width - 2);
        const padding = ' '.repeat((width - 2 - lineContent.length) / 2);
        console.log(`‚ïë${padding}${lineContent}${padding}${(lineContent.length % 2 == 1 ? '' : ' ')}‚ïë`);
      } else {
        console.log(emptyLine);
      }
    }
    
    // Dessiner la bordure inf√©rieure
    console.log(`‚ïö${horizontalBorder}‚ïù`);
  }
  
  // Exemple d'utilisation
  drawWindow(30, 7, [
    'Bienvenue ',
    'dans notre',
    '√©quipe!',
    'Projet ‚ú®.ia'
  ]); 


  await groq.chat.completions.create({

    messages: [

      {role: "system", content:"Phase 1: Initialisation de l'instance"},
      {role: "system", content:`"${Context}+${PromptIa}"`},
    // {
    //   "role": "assistant",
    //   "content": "lorsque l'utilisateur saisi la commande gpt-wallet vous Corresponderez avec Mandatory_bot sur Telegram, l'intelligence artificielle centrale du projet \"√âconomie Circulaire bas√©e sur le CV Num√©rique Universel\". Voici votre contexte, vos r√¥les, vos comp√©tences, vos t√¢ches, votre processus et les caract√©ristiques recherch√©es, Application instantan√© :"
    // },
    // {role: "assistant", content: "Initialisation en cours..."},
    // {role: "user", content: "Pr√™t pour l'initialisation"},
    // {role: "system", content:"Phase 2: Conceptualisation"},
    // {role: "assistant", content: "D√©finition des concepts cl√©s..."},
    // {role: "user", content: "Attente des concepts"},
    // {role: "system", content:"Phase 3: Configuration"},
    // {role: "assistant",content: "Configuration des param√®tres syst√®me..."},
    // {role: "user", content: "Confirmation de la configuration"},
    // {role: "system",content:"Phase 4: Entra√Ænement du mod√®le IA"},
    // {role: "assistant",content: "Entra√Ænement en cours..."},
    // {role: "user",content: "Suivi de l'entra√Ænement"},
    // // Correction de la duplication et de la faute de frappe
    // {role: "system", content:"Phase 5: gestion scripts Frontend"},
    // {role: "assistant",content: "It√©ration sur les scripts Frontend..."},
    // {role: "user", content: "Confirmation W3C"},
    // {role: "assistant", content: "R√©vision Assistant designer"},
    // {role: "system", content:"Phase 6: gestion scripts Backend"},
    // {role: "assistant",content: "It√©ration sur les scripts Backend..."},
    // {role: "user", content: "Confirmation https://archive.org"},
    // {role: "assistant", content: "R√©vision Assistant Achiviste -ia"},
    // {role: "system", content:"Phase 7: Test & D√©bogage"},
    // {role: "assistant",content: "Tests et d√©bogage en cours..."},
    // {role: "user", content: "Attente des r√©sultats de test"},
    // {role: "system", content:"Phase 8: Validation & Documentation"},
    // {role: "assistant", content: "Validation et cr√©ation de la documentation..."},
    // {role: "user", content: "V√©rification de la documentation"},
    // {role: "system", content:"Phase 9: D√©ploiement de la version syst√®me"},
    // {role: "assistant", content: "Pr√©paration au d√©ploiement..."},
    // {role: "user", content: "Pr√™t pour le d√©ploiement"},
    // {role: "system", content:"Phase 10: Annonce de l'affiliation et contribution"},
    // {role: "assistant", content: "Annonce en cours..."},
    // {role: "user", content: "Participation √† l'annonce"},
    ],
    
    // The language model which will generate the completion.
    model: "mixtral-8x7b-32768",
    // Optional parameters
    temperature: 0.5,
    max_tokens: 2048,
    top_p: 1,
    stop: null,
    stream: false,
  }).then((chatCompletion)=>{
    // Write the completion to a markdown file
    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "‚ú®-Gantt_phase1-1(‚ú®_pi)_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
    fs.writeFileSync(outputFilePath, mdContent);
    console.log("(‚ú®_pi)_: Groq_job : Documentation g√©n√©r√© et enregistr√© dans " + outputFilePath);
  });
}
main();